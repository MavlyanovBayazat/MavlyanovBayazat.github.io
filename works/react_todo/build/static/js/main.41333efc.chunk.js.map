{"version":3,"sources":["components/add-todo-form/AddTodoForm.js","components/todo-list/TodoList.js","components/filters/TodosFilters.js","App.js","index.js"],"names":["AddTodoForm","props","useState","newTaskName","setNewTaskName","className","onSubmit","e","preventDefault","trim","addTodo","onChange","target","value","type","placeholder","TodoList","tasks","map","task","idx","done","name","onClick","toggleDone","deleteTodo","id","TodosFilters","setDoneFilter","doneFilter","App","JSON","parse","localStorage","getItem","setTasks","searchFilter","setSearchFilter","storeTasks","setItem","stringify","filterredTasks","filter","toLowerCase","indexOf","slice","newTask","todoName","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41333efc.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nfunction AddTodoForm(props) {\n  let [newTaskName, setNewTaskName] = useState('')\n\n  // ######################\n\n  const onAddTodo = (e) => {\n    e.preventDefault()\n\n    if (newTaskName.trim() == '') {\n      return\n    }\n\n    props.addTodo(newTaskName)\n    setNewTaskName('')\n  }\n\n  const onNewTaskNameChange = (e) => {\n    setNewTaskName(e.target.value)\n  }\n\n  // ######################\n\n  return (\n    <form className=\"row g-3 mt-1\" onSubmit={onAddTodo}>\n      <div className=\"col\">\n        <input onChange={onNewTaskNameChange} value={newTaskName} type=\"text\" className=\"form-control\" placeholder=\"Введите название задачи\" />\n      </div>\n      <div className=\"col-auto\">\n        <button className=\"btn btn-primary\">Добавить</button>\n      </div>\n    </form>\n  )\n}\n\nexport { AddTodoForm }\n","import React from 'react'\n\nfunction TodoList(props) {\n  return (\n    <ul className=\"list-group\">\n      {props.tasks.map((task, idx) => (\n        <li className=\"list-group-item d-flex\" key={task.id}>\n          \n          <span className={\"w-100 \" + (task.done ? 'text-decoration-line-through' : '')}>\n            {task.name}\n          </span>\n\n          {task.done ? (\n            <button className=\"btn btn-danger btn-sm py-0 ms-auto text-nowrap\"\n                    onClick={() => props.toggleDone(idx)}>\n              Не выполнено\n            </button>\n          ) : (\n            <button className=\"btn btn-primary btn-sm py-0 ms-auto text-nowrap\"\n                    onClick={() => props.toggleDone(idx)}>\n              Выполнено\n            </button>\n          )}\n          \n          <button className=\"btn btn-sm py-0 ms-auto\" onClick={() => props.deleteTodo(idx)}>\n            Удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport { TodoList }","import React from 'react'\n\nfunction TodosFilters({ setDoneFilter, doneFilter }) {\n  return (\n    <div className=\"btn-group w-100 my-4\">\n      <button type=\"button\"\n            className={\"btn \" + (doneFilter === null ? 'btn-primary' : 'btn-outline-primary')}\n            onClick={() => setDoneFilter(null)}>\n        Все\n      </button>\n      <button type=\"button\"\n            className={\"btn \" + (doneFilter === true ? 'btn-primary' : 'btn-outline-primary')}\n            onClick={() => setDoneFilter(true)}>\n        Выполненные\n      </button>\n      <button type=\"button\"\n            className={\"btn \" + (doneFilter === false ? 'btn-primary' : 'btn-outline-primary')}\n            onClick={() => setDoneFilter(false)}>\n        Не выполненные\n      </button>\n    </div>\n  )\n}\n\nexport {TodosFilters}","import React, { useState } from 'react'\nimport { AddTodoForm } from './components/add-todo-form/AddTodoForm'\nimport { TodoList } from './components/todo-list/TodoList'\nimport {TodosFilters} from './components/filters/TodosFilters'\n\nfunction App() {\n  // State\n  let [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')) || [])\n  let [doneFilter, setDoneFilter] = useState(null)\n  let [searchFilter, setSearchFilter] = useState('')\n\n  const storeTasks = (tasks) => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n    setTasks(tasks)\n  }\n\n  // Actions\n  const addTodo = (todoName) => {\n    storeTasks([...tasks, {\n      name: todoName,\n      done: false,\n      id: Math.random().toString()\n    }])\n  }\n\n  const deleteTodo = (idx) => {\n    storeTasks([...tasks.slice(0, idx), ...tasks.slice(idx + 1)])\n  }\n\n  const toggleDone = (idx) => {\n    // 1. Получить обект таски\n    // 2. Изменить его\n    // 3. Записать новый измененный объект в новый массив\n    let task = tasks[idx]\n    let newTask = {...task, done: !task.done}\n\n    storeTasks([...tasks.slice(0, idx), newTask, ...tasks.slice(idx + 1)])\n  }\n\n  const filterredTasks = tasks\n    .filter((task) => {\n      if (doneFilter === null) return true\n      return task.done === doneFilter\n    }).filter(function(task) {\n      return task.name.toLowerCase().indexOf(searchFilter.toLowerCase()) >= 0\n    })\n\n  // Render\n  return (\n    <div className=\"App\">\n      <div className=\"container py-3\">\n        <h1 className=\"display-1 text-center mt-4 mb-5\">Todo List</h1>\n        {/* Filter */}\n        <TodosFilters setDoneFilter={setDoneFilter} doneFilter={doneFilter} />\n        {/* Search */}\n        <input type=\"text\"\n               className=\"form-control mb-4\"\n               placeholder=\"Поиск...\"\n               onChange={(e) => setSearchFilter(e.target.value)}\n        />\n        {/* Todo List */}\n        <TodoList tasks={filterredTasks} deleteTodo={deleteTodo} toggleDone={toggleDone} />\n        {/* Add Todo Form */}\n        <AddTodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  )\n}\n\nexport { App }","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/style.scss'\n\nimport {App} from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}